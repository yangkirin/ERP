<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kirin.modules.baseData.dao.TypeInfoDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.kirin.modules.baseData.entity.TypeInfoEntity" id="typeInfoMap">
        <result property="id" column="ID"/>
        <result property="typeCode" column="TYPE_CODE"/>
        <result property="typeName" column="TYPE_NAME"/>
		<result property="parentId" column="PARENT_ID"/>
        <result property="typePy" column="TYPE_PY"/>
        <result property="status" column="STATUS"/>
    </resultMap>

	<select id="getParentById" resultType="com.kirin.modules.baseData.entity.TypeInfoEntity">
		SELECT * FROM tb_type_info where PARENT_ID = #{typeInfoId}
	</select>

	<select id="queryListParentId" resultType="com.kirin.modules.baseData.entity.TypeInfoEntity">
		select * from tb_type_info where PARENT_ID = #{parentId}
	</select>
	
	<select id="queryParentList" resultType="com.kirin.modules.baseData.entity.TypeInfoEntity">
		select t.* from tb_type_info t
		<if test="parentId != null">
			<where>
				t.id=#{parentId} or t.PARENT_ID=#{parentId} or t.PARENT_ID in (select id from tb_type_info where parent_id=#{parentId})
			</where>
		</if>
	</select>

	<select id="getTypeInfo" parameterType="Integer" resultMap="typeInfoMap">
		select * from tb_type_info where ID = #{typeId}
	</select>

	<select id="queryObject" resultType="com.kirin.modules.baseData.entity.TypeInfoEntity">
		select t.*,(select t1.type_name  FROM tb_type_info t1 where t1.id=t.parent_id) as parentName from tb_type_info t where t.ID = #{value}
	</select>

	<select id="queryList" resultType="com.kirin.modules.baseData.entity.TypeInfoEntity">
		select ti.*,(SELECT p.TYPE_NAME FROM tb_type_info p where p.id=ti.PARENT_ID) as parentName from tb_type_info ti
		<where>
			<if test="searchWord != null and searchWord.trim() != ''">
				and (ti.type_name like concat('%',#{searchWord},'%') OR ti.type_code like concat('%',#{searchWord},'%'))
			</if>
		</where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ti.${sidx} ${order}
            </when>
			<otherwise>
                order by ti.ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from tb_type_info 
	</select>

	<select id="queryListForCommbom" resultType="com.kirin.modules.baseData.entity.TypeInfoEntity">
		select * from tb_type_info where STATUS='1' order by id asc
	</select>

	<insert id="save" parameterType="com.kirin.modules.baseData.entity.TypeInfoEntity" useGeneratedKeys="true" keyProperty="id">
		insert into tb_type_info
		(
			`TYPE_CODE`, 
			`TYPE_NAME`,
			`PARENT_ID`,
			`TYPE_PY`, 
			`STATUS`,
			`CREATE_USER`,
			`CREATE_DATE`,
			`UPDATE_USER`,
			`UPDATE_DATE`
		)
		values
		(
			#{typeCode}, 
			#{typeName},
			#{parentId},
			#{typePy}, 
			#{status},
			#{createUser},
			#{createDate},
			#{updateUser},
			#{updateDate}
		)
	</insert>
	 
	<update id="update" parameterType="com.kirin.modules.baseData.entity.TypeInfoEntity">
		update tb_type_info 
		<set>
			<if test="typeCode != null">`TYPE_CODE` = #{typeCode}, </if>
			<if test="typeName != null">`TYPE_NAME` = #{typeName}, </if>
			<if test="parentId != null">`PARENT_ID` = #{parentId}, </if>
			<if test="typePy != null">`TYPE_PY` = #{typePy}, </if>
			<if test="status != null">`STATUS` = #{status},</if>
			<if test="createUser != null">`CREATE_USER` = #{createUser},</if>
			<if test="createDate != null">`CREATE_DATE` = #{createDate},</if>
			<if test="updateUser != null">`UPDATE_USER` = #{updateUser},</if>
			<if test="updateDate != null">`UPDATE_DATE` = #{updateDate}</if>
		</set>
		where ID = #{id}
	</update>
	
	<delete id="delete">
		delete from tb_type_info where ID = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tb_type_info where ID in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>